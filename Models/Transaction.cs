using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.ComponentModel.DataAnnotations;
using System.Text.RegularExpressions;
namespace TransactionsRecordFile.Models

{
    /// <summary>
    /// A class of data objects that represent the basic properties of a Transaction
    /// Using EF (Entity Framework) this will correspond to a table in the database..
    /// </summary>
    public class Transaction
    {
        /// <summary>
        /// This will corresppnd to the primary key in the DB table
        /// And, because it is an int, it will be auto-generated by MS SQL svr
        /// </summary>
        public int TransactionId { get; set; }

        [Required(ErrorMessage = "Quantity is Required")]
        [Range(1, int.MaxValue, ErrorMessage = "Quantity must be an integer value greater than zero")]    
        public int? Quantity { get; set; }


        [Required(ErrorMessage = "Share Price is Required")]
        [Range(1, double.MaxValue, ErrorMessage = "Share Price must be an double value greater than zero")]
        public double? SharePrice { get; set; }

      
        //FK for Company
        [Required(ErrorMessage = "Company Name is required")]
        public int? CompanyId { get; set; }
        public Company Company { get; set; }


        // Here we want to add a Foreign Key (FK) relationship with TransactionType objects
        // We do that by adding 2 fields, first the  Id field that defines the FK via the PK
        // in the TransactionType table..

        [Required(ErrorMessage ="Please Enter the transaction type")]
        public string TransactionTypeId { get; set; }

        //Added a reference to a full TransactionType
        public TransactionType TransactionType { get; set; }

        //Gross method to calculate the Gross valve
        public double? Gross()
        {
            return this.SharePrice * this.Quantity;
        }

        // Net method to cal Net value
        public double? Net()
        {
            if (this.TransactionType.Name == "Buy")
                return this.Gross() + this.TransactionType.Fee;
            else
                return this.Gross() - this.TransactionType.Fee;
        }
    }
}
